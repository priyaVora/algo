

public class PhoneDirectory {

	public static void main(String[] args) {
		String s = "/+1-541-754-3010 156 Alphand_St. <J Steeve>\n 133, Green, Rd. <E Kustur> NY-56423 ;+1-541-914-3010\n"
			    + "+1-541-984-3012 <P Reed> /PO Box 530; Pollocksville, NC-28573\n :+1-321-512-2222 <Paul Dive> Sequoia Alley PQ-67209\n"
			    + "+1-741-984-3090 <Peter Reedgrave> _Chicago\n :+1-921-333-2222 <Anna Stevens> Haramburu_Street AA-67209\n"
			    + "+1-111-544-8973 <Peter Pan> LA\n +1-921-512-2222 <Wilfrid Stevens> Wild Street AA-67209\n"
			    + "<Peter Gone> LA ?+1-121-544-8974 \n <R Steell> Quora Street AB-47209 +1-481-512-2222\n"
			    + "<Arthur Clarke> San Antonio $+1-121-504-8974 TT-45120\n <Ray Chandler> Teliman Pk. !+1-681-512-2222! AB-47209,\n"
			    + "<Sophia Loren> +1-421-674-8974 Bern TP-46017\n <Peter O'Brien> High Street +1-908-512-2222; CC-47209\n"
			    + "<Anastasia> +48-421-674-8974 Via Quirinal Roma\n <P Salinger> Main Street, +1-098-512-2222, Denver\n"
			    + "<C Powel> *+19-421-674-8974 Chateau des Fosses Strasbourg F-68000\n <Bernard Deltheil> +1-498-512-2222; Mount Av.  Eldorado\n"
			    + "+1-099-500-8000 <Peter Crush> Labrador Bd.\n +1-931-512-4855 <William Saurin> Bison Street CQ-23071\n"
			    + "<P Salinge> Main Street, +1-098-512-2222, Denve\n"+ "<P Salinge> Main Street, +1-098-512-2222, Denve\n";
		System.out.println(phone(s,"1-098-512-2222"));
	}
	
	
	
	 public static  String phone(String strng, String num) {
	     //System.out.println(strng);
				String message = "";
				String num2 = "+" + num;
				int count = 0;
				String[] contacts = strng.split("\n");
				String contact = null;
				int phoneCount = 0;
				System.out.println(countContains(num, strng) + " Full count");
				loop: for (String string : contacts) {
					phoneCount = phoneCount + countContains(num, string);
					if(phoneCount == 0) {
						message = "Error => Not found: " + num;
					} else if(phoneCount>1) {
						message = "Error => Too many people: " + num;
						break loop;
					} else {
						if(string.contains(num2)) {
							contact = string;
						}
					}
				}
				if (contact != null) { 
					String name = null;
					String addr = null;
					
					contact = contact.replaceAll(num, "");
					//System.out.println(contact + " before grabbing name");
					if(contact.contains("<") && contact.contains(">"))  {
						String rawRegex = "<(.*)>";
						name = contact.substring(contact.indexOf("<", 0)+1, contact.indexOf(">", 0));
						contact = contact.replaceAll("<" + name + ">", "");
					}
					
					addr = contact.replaceAll("[^A-z0-9\\d\\s.-]", "");
					addr = addr.replaceAll("_", " ");
					addr = addr.trim();
		      		addr = addr.replace("  ", " ");
					message = "Phone => " + num + ", Name => " + name + ", Address => " + addr;
				}
				//System.out.println(message + " Known error");
	      message = message.replace("+", "");
				return message;
		    }
		 
		 public static int countContains(String needle, String haystack) {
				//needle is sentence
				//haystack is the term you wanna count for
				int count = 0;
				
				//System.out.println("Haystack: " + haystack);
				//System.out.println("Needle: " + needle);
				
				if(haystack.contains(needle)) { 
				//	System.out.println("\tContains: True");
					count++;
				} 
				return count;
			}
}
