import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

public class Node<T> {

	private String name;

	private List<Node<T>> shortestPath = new LinkedList<Node<T>>();

	private Integer distance = Integer.MAX_VALUE;

	Map<Node<T>, Integer> adjacentNodes = new HashMap<Node<T>, Integer>();

	public void addDestination(Node<T> destination, int distance) {
		adjacentNodes.put(destination, distance);
	}

	public Node(String name) {
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public List<Node<T>> getShortestPath() {
		return shortestPath;
	}

	public void setShortestPath(List<Node<T>> shortestPath) {
		this.shortestPath = shortestPath;
	}

	public Integer getDistance() {
		return distance;
	}

	public void setDistance(Integer distance) {
		this.distance = distance;
	}

	public Map<Node<T>, Integer> getAdjacentNodes() {
		return adjacentNodes;
	}

	public void setAdjacentNodes(Map<Node<T>, Integer> adjacentNodes) {
		this.adjacentNodes = adjacentNodes;
	}

	@Override
	public String toString() {
		System.out.println("Nodes adjacent to : " + name);
		Iterator it = adjacentNodes.entrySet().iterator();
		String adjString = "";
		while (it.hasNext()) {
			Map.Entry pair = (Map.Entry) it.next();
			Node<T> temp = (Node<T>) pair.getKey();
			adjString = temp.getName();
			it.remove();
		}
		return "Node name=" + name + ", shortestPath=" + shortestPath + ", distance=" + distance + ", adjacentNodes= " 
				+ adjString;
	}

}
